# We will go for a Ubunty Jammy
FROM ubuntu:jammy
LABEL description="MedShake EHR dockerized"
LABEL maintainer="bugeaud@gmail.com"

# Some environement variables to customize
#ENV SERVER_NAME=www.example.net
#ENV SERVER_ALIAS=

# Set some environement variables required
ENV APP_PATH /app
ENV MEDSHAKEEHRPATH $APP_PATH/MedShakeEHR-base
ENV MEDSHAKEEHRPUBLICPATH $APP_PATH/MedShakeEHR-base/public_html

# Ensure no interractive term is used to avoid errors
ENV DEBIAN_FRONTEND noninteractive

# Create the APP directory and move to it
ADD --chown=www-data:www-data . $MEDSHAKEEHRPATH
WORKDIR $APP_PATH

# Check system is fresh and clean
RUN apt update && apt --assume-yes upgrade

# Set the timezone
ENV TZ 'Europe/Paris'
RUN echo $TZ > /etc/timezone && \
	apt install --assume-yes apt-utils tzdata locales && \
	rm /etc/localtime && \
	ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
	dpkg-reconfigure -f noninteractive tzdata && \
	apt clean

# Install some global prerequisites
RUN apt --assume-yes install imagemagick git dcmtk 
# Install PhP as apache's mod
RUN apt --assume-yes install libapache2-mod-php

# Ubuntu has dropped pdftk because of gcj reliance.
# We need to build a pdftk alternative version
# Let's install prerequisites for the alternative pdftk 
RUN apt --assume-yes install git openjdk-8-jdk ant libcommons-lang3-java libbcprov-java gradle
# If gradle is used for build add : gradle
# If latest JDK use default-jdk-headless as a JDK
# If ANT based setup install would need : ant libcommons-lang3-java libbcprov-java
# Get the latest alternative pdftk, build it & check if help can be displayed
# Solution 1 : use ant
#RUN git clone https://gitlab.com/marcvinyals/pdftk.git \
#	&& cd pdftk \
#	&& ant -lib /usr/share/java jar \
#	&& java -jar build/jar/pdftk.jar --help
# Solution 2 : use Gradle (the new default)
#RUN git clone https://gitlab.com/pdftk-java/pdftk.git \
#       && cd pdftk \
#       && gradle wrapper --gradle-version 6.0.1 \
#       && gradle shadowJar \
#       && java -jar build/libs/pdftk-all.jar --help
# Solution 3 : Starting from 18.10 there is a package for that :)
RUN apt --assume-yes install pdftk

WORKDIR $APP_PATH

# Install curl as it is required anyway to fetch extensions 
RUN apt --assume-yes install curl

# Install PHP Composer thru bin inside latest docker image

COPY --from=composer/composer:latest-bin /composer /usr/bin/composer

# Test the composer & set that root exec is fine as we are in a container
# Let's suppress the warning we are using root as we are inside Docker
ENV COMPOSER_ALLOW_SUPERUSER=1
RUN composer --version --no-interaction 

# Fetch the PHP Extension installer for Docker
RUN curl -sf -L -O https://github.com/docker-library/php/blob/master/docker-php-ext-install \
	&& chmod 0774 docker-php-ext-install

# Install some more PhP's dependencies
RUN apt --assume-yes install php-gd php-dom php-mbstring php-intl php-curl php-zip php-xml php-gnupg php-imagick php-imap php-soap php-mysql php-bcmath mariadb-client

WORKDIR $MEDSHAKEEHRPATH

# Ensure PHP composer has a fresh cache
RUN composer clear-cache

# Ensure updating the PHP composer dependencies
RUN composer update

# Install the MedShakeEHR Base PhP's dependencies
#RUN composer install -d ./MedShakeEHR-base
RUN composer install

# Install MedShakeEHR's Web dependencies
#RUN composer install -d ./MedShakeEHR-base/public_html
RUN composer install -d ./public_html

WORKDIR $APP_PATH
# Check which .ini files are used
RUN php --ini

# Fix the PHP ini files to ensure bigger sizes
RUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 20M/' /etc/php/$(php -r "echo PHP_VERSION;" | cut -c1-3)/apache2/php.ini
RUN sed -i 's/post_max_size = 8M/post_max_size = 20M/' /etc/php/$(php -r "echo PHP_VERSION;" | cut -c1-3)/apache2/php.ini
RUN sed -i 's/;max_input_vars = 1000/max_input_vars = 10000/' /etc/php/$(php -r "echo PHP_VERSION;" | cut -c1-3)/apache2/php.ini

# Install npm
#V2 RUN apt-get install -y -qq npm

# Install bower
#V2 RUN npm install --global bower

# Allow bower to run under docker's root
#V2 RUN echo '{ "allow_root": true }' > /root/.bowerrc

# Make sure any bower module will be fixed toward wrong line end
RUN git config --global core.autocrlf input

WORKDIR $MEDSHAKEEHRPUBLICPATH
#V2 RUN bower install -V --config.cwd ./MedShakeEHR-base/public_html/
#RUN bower install -V

# Create the Apache 2 configuration for the MedShake EHR application
COPY medshakeehr.conf /etc/apache2/sites-available/

#Enable URL rewriting
RUN a2enmod rewrite

# Activate the application
RUN a2dissite 000-default && a2ensite medshakeehr

# Run Apache 2 as foreground
WORKDIR $APP_PATH
#CMD apachectl -D FOREGROUND
COPY docker-ehr-web-apache2-foreground /usr/local/bin/
CMD docker-ehr-web-apache2-foreground

EXPOSE 80/tcp
EXPOSE 443/tcp
